name: CI
# This workflow is triggered on pushes to the repository.
on: [push, pull_request]

jobs:
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    container: golang:1.18
    env:
      PROJECT_PATH: /go/src/github.com/packagrio/releasr
    strategy:
      matrix:
        package_type: ['chef', 'golang', 'node', 'python', 'ruby', 'generic']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Test Binaries
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          mkdir -p $PROJECT_PATH
          cp -a $GITHUB_WORKSPACE/* $PROJECT_PATH/
          cd $PROJECT_PATH

          go mod vendor
          ./ci/test-build.sh ${{ matrix.package_type }}
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: "test-binary-${{ matrix.package_type }}"
          path: /caches/test-binaries/
  test:
    name: Test
    needs: build-test
    runs-on: ubuntu-latest
    container: "ghcr.io/packagrio/packagr:${{ matrix.package_type.image_tag }}"

    strategy:
      matrix:
        package_type:
          - name: chef
            image_tag: latest-chef
          - name: golang
            image_tag: latest-golang
          - name: node
            image_tag: latest-node
          - name: python
            image_tag: latest-python
          - name: ruby
            image_tag: latest-ruby
          - name: generic
            image_tag: latest-ubuntu
      fail-fast: false
    steps:
      - name: Download test binaries
        uses: actions/download-artifact@v4
        with:
          name: "test-binary-${{ matrix.package_type.name }}"
      - name: Test
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          chmod -R +x .
          ./test-execute.sh ${{ matrix.package_type.name }}
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-${{ matrix.package_type.name }}
          path: /coverage/coverage-${{ matrix.package_type.name }}.txt

  build:
    name: Build
    runs-on: ubuntu-latest
    container: golang:1.18
    env:
      PROJECT_PATH: /go/src/github.com/packagrio/releasr
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          mkdir -p $PROJECT_PATH
          cp -a $GITHUB_WORKSPACE/* $PROJECT_PATH/
          cd $PROJECT_PATH

          go mod vendor

          # build linux binary
          go test -mod vendor -v -tags "static" $(go list ./... | grep -v /vendor/)
          go build -mod vendor -ldflags "-X main.goos=linux -X main.goarch=amd64" -o packagr-releasr-linux-amd64 -tags "static" cmd/releasr/releasr.go

          # build mac binary
          go build -mod vendor -ldflags "-X main.goos=darwin -X main.goarch=amd64" -o packagr-releasr-darwin-amd64 -tags "static" cmd/releasr/releasr.go

          chmod +x packagr-releasr-linux-amd64
          chmod +x packagr-releasr-darwin-amd64
          ./packagr-releasr-linux-amd64 --help
          echo "listing linked libraries" && ldd packagr-releasr-linux-amd64

      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: releasr-linux-binary
          path: ${{ env.PROJECT_PATH }}/packagr-releasr-linux-amd64
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: releasr-mac-binary
          path: ${{ env.PROJECT_PATH }}/packagr-releasr-darwin-amd64
